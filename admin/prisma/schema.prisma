// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int      @id @default(autoincrement())
  telegramId    Int      @unique
  username      String?
  first_name    String?
  last_name     String?
  photo_url     String?
  language_code String?
  orders        Order[]
  createdAt     DateTime @default(now())
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String
  imageUrl  String
  products  Product[]
  createdAt DateTime  @default(now())
}

model Product {
  id            Int            @id @default(autoincrement())
  sku           String         @unique
  name          String
  description   String?
  price         Int // Цена в минимальной единице (например, в тийинах)
  weight        Float? // Вес в граммах
  type          ProductType    @default(SINGLE)
  preciousMetal MetalType? // Тип металла
  category      Category       @relation(fields: [categoryId], references: [id])
  categoryId    Int
  images        ProductImage[]
  orders        Order[]
  sizes         ProductSize[]

  parentBundle ProductBundle[] @relation("BundleParent")
  childBundles ProductBundle[] @relation("BundleChildren")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductSize {
  id        Int     @id @default(autoincrement())
  value     String // Например: "16", "17-18", "S/M"
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int     @default(0) // Количество для конкретного размера
}

model ProductBundle {
  bundleId Int     @id @default(autoincrement())
  parent   Product @relation("BundleParent", fields: [parentId], references: [id])
  parentId Int
  child    Product @relation("BundleChildren", fields: [childId], references: [id])
  childId  Int
  quantity Int     @default(1)
}

enum ProductType {
  SINGLE
  BUNDLE
}

model ProductImage {
  id        Int     @id @default(autoincrement())
  url       String
  product   Product @relation(fields: [productId], references: [id])
  productId Int
}

model Order {
  id        Int         @id @default(autoincrement())
  user      User        @relation(fields: [userId], references: [id])
  userId    Int
  product   Product     @relation(fields: [productId], references: [id])
  productId Int
  status    OrderStatus @default(PENDING)
  createdAt DateTime    @default(now())
}

enum OrderStatus {
  PENDING
  PAID
  SHIPPED
  COMPLETED
  CANCELLED
}

model AdminUser {
  id        Int            @id @default(autoincrement())
  email     String         @unique
  password  String
  createdAt DateTime       @default(now())
  sessions  AdminSession[]
}

model AdminSession {
  id        Int       @id @default(autoincrement())
  token     String    @unique
  user      AdminUser @relation(fields: [userId], references: [id])
  userId    Int
  expires   DateTime
  createdAt DateTime  @default(now())
}

enum MetalType {
  GOLD // Золото
  SILVER // Серебро
  PLATINUM // Платина
  PALLADIUM // Палладий
  OTHER // Другие материалы
}
